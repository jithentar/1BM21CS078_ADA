#include <stdio.h>
#include <stdbool.h>

int n;
int ld[30] = {0};
int rd[30] = {0};
int cl[30] = {0};

void printSolution(int board[n][n])
{
    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < n; j++)
        {
            printf("%d ", board[i][j]);
        }
        printf("\n");
    }
}

bool solveNQUtil(int board[n][n], int col)
{
    if (col >= n)
    {
        return true;
    }

    for (int i = 0; i < n; i++)
    {
        if ((ld[i - col + n - 1] != 1 && rd[i + col] != 1) && cl[i] != 1)
        {
            board[i][col] = 1;
            ld[i - col + n - 1] = rd[i + col] = cl[i] = 1;

            if (solveNQUtil(board, col + 1))
            {
                return true;
            }

            board[i][col] = 0;
            ld[i - col + n - 1] = rd[i + col] = cl[i] = 0;
        }
    }

    return false;
}

bool solvenQ()
{
    printf("Enter the size of board: ");
    scanf("%d", &n);
    int board[n][n];

    printf("Enter the board matrix:\n");
    for (int i = 0; i < n; i++)
    {
        for (int j = 0; i < n; j++)
        {
            board[i][j] = 0;
        }
    }

    if (solveNQUtil(board, 0) == false)
    {
        printf("\nSolution does not exist!");
        return false;
    }

    printSolution(board);
    return true;
}

int main()
{
    solveNQ();
    return 0;
}
